--- CMakeLists.txt      (revision 11940)
+++ CMakeLists.txt      (working copy)
@@ -339,6 +339,7 @@
 
 # INSTALL_FILES(/include/osg/ FILES "${OPENSCENEGRAPH_CONFIG_HEADER}")
 
+INCLUDE(MacroOptionalFindPackage)
 
 ################################################################################
 # Set Version Info resource file
@@ -365,29 +366,29 @@
 ENDIF()
 
 # Common to all platforms:
-FIND_PACKAGE(FreeType)
-FIND_PACKAGE(Inventor)
-FIND_PACKAGE(Jasper)
-FIND_PACKAGE(OpenEXR)
-FIND_PACKAGE(COLLADA)
-FIND_PACKAGE(FBX)
-FIND_PACKAGE(ZLIB)
-FIND_PACKAGE(Xine)
-FIND_PACKAGE(OpenVRML)
-FIND_PACKAGE(Performer)
-FIND_PACKAGE(GDAL)
-FIND_PACKAGE(CURL)
-FIND_PACKAGE(ITK)
-FIND_PACKAGE(LibVNCServer)
-FIND_PACKAGE(OurDCMTK)
-FIND_PACKAGE(OpenAL)
-FIND_PACKAGE(XUL)
-FIND_PACKAGE(FFmpeg)
+MACRO_OPTIONAL_FIND_PACKAGE(FreeType)
+MACRO_OPTIONAL_FIND_PACKAGE(Inventor)
+MACRO_OPTIONAL_FIND_PACKAGE(Jasper)
+MACRO_OPTIONAL_FIND_PACKAGE(OpenEXR)
+MACRO_OPTIONAL_FIND_PACKAGE(COLLADA)
+MACRO_OPTIONAL_FIND_PACKAGE(FBX)
+MACRO_OPTIONAL_FIND_PACKAGE(ZLIB)
+MACRO_OPTIONAL_FIND_PACKAGE(Xine)
+MACRO_OPTIONAL_FIND_PACKAGE(OpenVRML)
+MACRO_OPTIONAL_FIND_PACKAGE(Performer)
+MACRO_OPTIONAL_FIND_PACKAGE(GDAL)
+MACRO_OPTIONAL_FIND_PACKAGE(CURL)
+MACRO_OPTIONAL_FIND_PACKAGE(ITK)
+MACRO_OPTIONAL_FIND_PACKAGE(LibVNCServer)
+MACRO_OPTIONAL_FIND_PACKAGE(OurDCMTK)
+MACRO_OPTIONAL_FIND_PACKAGE(OpenAL)
+MACRO_OPTIONAL_FIND_PACKAGE(XUL)
+MACRO_OPTIONAL_FIND_PACKAGE(FFmpeg)
+MACRO_OPTIONAL_FIND_PACKAGE(SDL)
+MACRO_OPTIONAL_FIND_PACKAGE(Poppler-glib)
+MACRO_OPTIONAL_FIND_PACKAGE(RSVG)
+MACRO_OPTIONAL_FIND_PACKAGE(GtkGl)
 FIND_PACKAGE(DirectShow)
-FIND_PACKAGE(SDL)
-FIND_PACKAGE(Poppler-glib)
-FIND_PACKAGE(RSVG)
-FIND_PACKAGE(GtkGl)
 
 # Include macro utilities here
 INCLUDE(OsgMacroUtils)
@@ -397,17 +398,17 @@
 IF  (DESIRED_QT_VERSION)
 
     IF  (DESIRED_QT_VERSION MATCHES 4)
-      FIND_PACKAGE(Qt4)
+      MACRO_OPTIONAL_FIND_PACKAGE(Qt4)
     ELSE()
-      FIND_PACKAGE(Qt3)
+      MACRO_OPTIONAL_FIND_PACKAGE(Qt3)
     ENDIF()
 
 ELSE()
 
-    FIND_PACKAGE(Qt4)
+    MACRO_OPTIONAL_FIND_PACKAGE(Qt4)
 
     IF  (NOT QT4_FOUND)
-        FIND_PACKAGE(Qt3)
+        MACRO_OPTIONAL_FIND_PACKAGE(Qt3)
     ENDIF()
 
 ENDIF()
@@ -416,9 +417,9 @@
 IF   (BUILD_OSG_EXAMPLES)
 
 
-    FIND_PACKAGE(FLTK)
-    FIND_PACKAGE(GLUT)
-    FIND_PACKAGE(FOX)
+    MACRO_OPTIONAL_FIND_PACKAGE(FLTK)
+    MACRO_OPTIONAL_FIND_PACKAGE(GLUT)
+    MACRO_OPTIONAL_FIND_PACKAGE(FOX)
 
     SET(wxWidgets_USE_LIBS base core gl net)
     FIND_PACKAGE(wxWidgets)
@@ -441,10 +442,10 @@
 # Image readers/writers depend on 3rd party libraries except for OS X which
 # can use Quicktime.
 IF(NOT APPLE)
-    FIND_PACKAGE(GIFLIB)
-    FIND_PACKAGE(JPEG)
-    FIND_PACKAGE(PNG)
-    FIND_PACKAGE(TIFF)
+    MACRO_OPTIONAL_FIND_PACKAGE(GIFLIB)
+    MACRO_OPTIONAL_FIND_PACKAGE(JPEG)
+    MACRO_OPTIONAL_FIND_PACKAGE(PNG)
+    MACRO_OPTIONAL_FIND_PACKAGE(TIFF)
 
     # QuickTime is required for OS X, but optional for Windows.
     IF(WIN32)

diff -ruN ../OpenSceneGraph-2.9.7.old/CMakeModules/COPYING-CMAKE-SCRIPTS ./CMakeModules/COPYING-CMAKE-SCRIPTS
--- ../OpenSceneGraph-2.9.7.old/CMakeModules/COPYING-CMAKE-SCRIPTS	1970-01-01 01:00:00.000000000 +0100
+++ ./CMakeModules/COPYING-CMAKE-SCRIPTS	2010-07-26 21:01:52.000000000 +0200
@@ -0,0 +1,22 @@
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions
+are met:
+
+1. Redistributions of source code must retain the copyright
+   notice, this list of conditions and the following disclaimer.
+2. Redistributions in binary form must reproduce the copyright
+   notice, this list of conditions and the following disclaimer in the
+   documentation and/or other materials provided with the distribution.
+3. The name of the author may not be used to endorse or promote products 
+   derived from this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
diff -ruN ../OpenSceneGraph-2.9.7.old/CMakeModules/MacroOptionalFindPackage.cmake ./CMakeModules/MacroOptionalFindPackage.cmake
--- ../OpenSceneGraph-2.9.7.old/CMakeModules/MacroOptionalFindPackage.cmake	1970-01-01 01:00:00.000000000 +0100
+++ ./CMakeModules/MacroOptionalFindPackage.cmake	2010-07-26 21:02:42.000000000 +0200
@@ -0,0 +1,28 @@
+# - MACRO_OPTIONAL_FIND_PACKAGE() combines FIND_PACKAGE() with an OPTION()
+# MACRO_OPTIONAL_FIND_PACKAGE( <name> [QUIT] )
+# This macro is a combination of OPTION() and FIND_PACKAGE(), it
+# works like FIND_PACKAGE(), but additionally it automatically creates
+# an option name WITH_<name>, which can be disabled via the cmake GUI.
+# or via -DWITH_<name>=OFF
+# The standard <name>_FOUND variables can be used in the same way
+# as when using the normal FIND_PACKAGE()
+
+# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+
+macro (MACRO_OPTIONAL_FIND_PACKAGE _name )
+   option(WITH_${_name} "Search for ${_name} package" ON)
+   if (WITH_${_name})
+      find_package(${_name} ${ARGN})
+   else (WITH_${_name})
+      set(${_name}_FOUND)
+      set(${_name}_INCLUDE_DIR)
+      set(${_name}_INCLUDES)
+      set(${_name}_LIBRARY)
+      set(${_name}_LIBRARIES)
+   endif (WITH_${_name})
+endmacro (MACRO_OPTIONAL_FIND_PACKAGE)
+
diff -ruN ../OpenSceneGraph-2.9.7.old/CMakeModules/OsgMacroUtils.cmake ./CMakeModules/OsgMacroUtils.cmake
--- ../OpenSceneGraph-2.9.7.old/CMakeModules/OsgMacroUtils.cmake	2009-10-30 16:17:38.000000000 +0100
+++ ./CMakeModules/OsgMacroUtils.cmake	2010-07-26 21:00:31.000000000 +0200
@@ -318,9 +318,9 @@
         SETUP_EXE(${IS_COMMANDLINE_APP})
         
         IF(APPLE)
-            INSTALL(TARGETS ${TARGET_TARGETNAME} RUNTIME DESTINATION share/OpenSceneGraph/bin BUNDLE DESTINATION share/OpenSceneGraph/bin )            
+            INSTALL(TARGETS ${TARGET_TARGETNAME} RUNTIME DESTINATION bin BUNDLE DESTINATION bin)
         ELSE(APPLE)
-            INSTALL(TARGETS ${TARGET_TARGETNAME} RUNTIME DESTINATION share/OpenSceneGraph/bin COMPONENT openscenegraph-examples )
+            INSTALL(TARGETS ${TARGET_TARGETNAME} RUNTIME DESTINATION bin COMPONENT openscenegraph-examples )
         ENDIF(APPLE)
 
 ENDMACRO(SETUP_EXAMPLE)
diff -ruN ../OpenSceneGraph-2.9.7.old/examples/osgviewerFLTK/CMakeLists.txt ./examples/osgviewerFLTK/CMakeLists.txt
--- ../OpenSceneGraph-2.9.7.old/examples/osgviewerFLTK/CMakeLists.txt	2007-06-25 10:35:06.000000000 +0200
+++ ./examples/osgviewerFLTK/CMakeLists.txt	2010-07-26 21:00:36.000000000 +0200
@@ -1,6 +1,6 @@
 SET(TARGET_SRC osgviewerFLTK.cpp )
 
-SET(TARGET_EXTERNAL_LIBRARIES ${FLTK_LIBRARY} ${FLTK_GL_LIBRARY})
+SET(TARGET_EXTERNAL_LIBRARIES ${FLTK_BASE_LIBRARY} ${FLTK_GL_LIBRARY})
 
 INCLUDE_DIRECTORIES(${FLTK_INCLUDE_DIR} )
 
