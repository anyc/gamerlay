diff -Naur GU/src/luminous.d GU-gentoo/src/luminous.d
--- GU/src/luminous.d	2006-07-08 04:49:12.000000000 +0200
+++ GU-gentoo/src/luminous.d	2007-10-10 19:32:36.000000000 +0200
@@ -7,7 +7,7 @@
 */
 
 private	import std.math;
-private	import std.string;
+private	import std.c.string;
 private	import opengl;
 private	import util_sdl;
 private	import task;
@@ -68,11 +68,11 @@
 
 static void makeLuminousTexture()
 {
-	uint *data = td;
+	uint *data = td.ptr;
 	int i;
 
 	td[0..length] = 0;
-	//memset(data, 0, luminousTextureWidth * luminousTextureHeight * 4 * uint.sizeof);
+	memset(data, 0, luminousTextureWidth * luminousTextureHeight * 4 * uint.sizeof);
 	glGenTextures(1, &luminousTexture);
 	glBindTexture(GL_TEXTURE_2D, luminousTexture);
 	glTexImage2D(GL_TEXTURE_2D, 0, 4, luminousTextureWidth, luminousTextureHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, data);
diff -Naur GU/src/main.d GU-gentoo/src/main.d
--- GU/src/main.d	2006-09-01 21:02:40.000000000 +0200
+++ GU-gentoo/src/main.d	2007-10-10 19:30:12.000000000 +0200
@@ -6,14 +6,14 @@
 	2006/07/07 jumpei isshiki
 */
 
-private import std.c.windows.windows;
+//private import std.c.windows.windows;
 private import std.stdio;
 private import std.string;
 private import std.random;
 private	import std.math;
 private import SDL;
 private import opengl;
-private import reflection;
+//private import reflection;
 private import util_sdl;
 private import util_glbf;
 private import util_pad;
@@ -66,9 +66,11 @@
 			for(int i = 0; i < argc; i++){
 				str_buf[i] = lpCmdLine[i];
 			}
-			split_buf = split(str_buf);
+			split_buf = split(str_buf);
+/*
 			if(split_buf[0].length > 1) Reflection.init(split_buf[0]);
-			else						Reflection.init("main.exe");
+			else						Reflection.init("main.exe");
+*/
 		}
 
 		try{
@@ -86,7 +88,7 @@
 }else{
 	int main(char[][] argv)
 	{
-		Reflection.init(argv[argv.length-1]);
+	//	Reflection.init(argv[argv.length-1]);
 		return boot();
 	}
 }
diff -Naur GU/src/task.d GU-gentoo/src/task.d
--- GU/src/task.d	2006-08-24 17:35:26.000000000 +0200
+++ GU-gentoo/src/task.d	2007-10-10 19:33:42.000000000 +0200
@@ -182,7 +182,9 @@
 		TskBuf[i].fp_draw = null;
 		TskBuf[i].fp_exit = null;
 		TskBuf[i].bullet_command = null;
-		TskBuf[i].bullet_state = null;
+		TskBuf[i].bullet_state = null;
+	        TskBuf[i].bullet_accx = 0;
+	        TskBuf[i].bullet_accy = 0;
 	}
 	TskBuf[i].tskid = TSKID_NONE;
 	TskBuf[i].entry = -1;
diff -Naur GU/src/util_glbf.d GU-gentoo/src/util_glbf.d
--- GU/src/util_glbf.d	2006-07-07 17:37:52.000000000 +0200
+++ GU-gentoo/src/util_glbf.d	2007-10-10 19:30:12.000000000 +0200
@@ -156,7 +156,7 @@
 {
 	glBindTexture(GL_TEXTURE_2D, font.texture);				// Select Our Font Texture
 	glListBase(font.base-32);								// Choose The Font Set (0 or 1)
-	glCallLists(str.length, GL_BYTE, str);					// Write The Text To The Screen
+	glCallLists(str.length, GL_BYTE, str.ptr);					// Write The Text To The Screen
 }
 
 int glbfInit(GLBitmapFont* font, char* filename, GLfloat xsize, GLfloat xdots, GLfloat ydots)
diff -Naur GU/src/util_rand.d GU-gentoo/src/util_rand.d
--- GU/src/util_rand.d	2006-07-26 16:50:10.000000000 +0200
+++ GU-gentoo/src/util_rand.d	2007-10-10 19:30:12.000000000 +0200
@@ -112,14 +112,14 @@
 
 void next_state()
 {
-	uint *p=state;
+	uint *p=state.ptr;
 
 	/* if init_genrand() has not been called, */
 	/* a default initial seed is used		  */
 	if (initf==0) init_genrand(5489);
 
 	left = N;
-	next = state;
+	next = state.ptr;
 	
 	for (int j=N-M+1; --j; p++) 
 		*p = p[M] ^ TWIST(p[0], p[1]);
diff -Naur GU/src/util_snd.d GU-gentoo/src/util_snd.d
--- GU/src/util_snd.d	2006-07-23 17:34:42.000000000 +0200
+++ GU-gentoo/src/util_snd.d	2007-10-10 19:30:12.000000000 +0200
@@ -99,7 +99,7 @@
 
 	char[] fileName = name ~ "\0";
 
-	music[ch] = Mix_LoadMUS(fileName);
+	music[ch] = Mix_LoadMUS(fileName.ptr);
 	if(!music[ch]){
 		writefln("snd load error %s", name);
 		sound_use = false;
@@ -119,7 +119,7 @@
 
 	char[] fileName = name ~ "\0";
 
-	chunk[bank] = Mix_LoadWAV(fileName);
+	chunk[bank] = Mix_LoadWAV(fileName.ptr);
 	if(!chunk[bank]){
 		sound_use = false;
 	}
