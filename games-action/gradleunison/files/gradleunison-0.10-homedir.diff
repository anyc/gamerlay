diff -Naur GU-p/src/gctrl.d GU-p-home/src/gctrl.d
--- GU-p/src/gctrl.d	2006-09-01 21:58:18.000000000 +0200
+++ GU-p-home/src/gctrl.d	2009-08-28 14:06:24.000000000 +0200
@@ -6,6 +6,7 @@
 	2004/04/08 jumpei isshiki
 */
 
+private import std.string;
 private import std.stdio;
 private import std.math;
 private import std.file;
@@ -116,6 +117,18 @@
 private const int RANKING_TIME = 30 * ONE_SEC;
 private const int RANKING_TIME2 = RESULT_TIME - (3 * ONE_SEC);
 
+public static char[] pref_dir() {
+  char * home = getenv("HOME");
+  if (home is null)
+    throw new Error("HOME environment variable undefined");
+  char[] dir = std.string.toString(home) ~ "/.gradleunison";
+  try {
+    mkdir(dir);
+  } catch (FileException e) {
+  }
+  return dir;
+}
+
 void TSKgctrl(int id)
 {
 	void game_init(int id){
@@ -155,8 +168,8 @@
 	}
 
 	void init_highscore(){
-		if(exists("score.dat")){
-			hi_score = cast(int[])read("score.dat");
+		if(exists(pref_dir() ~ "/" ~ "score.dat")){
+			hi_score = cast(int[])read(pref_dir() ~ "/" ~ "score.dat");
 		}else{
 			hi_score.length = RANKING_MAX * RANKING_RECORD;
 			for(int i = 0; i < RANKING_MAX; i++){
@@ -165,7 +178,7 @@
 				hi_score[i * RANKING_RECORD + RANKING_PHASE] = 1;
 				hi_score[i * RANKING_RECORD + RANKING_CHAIN] = 1;
 			}
-			write("score.dat", cast(void[])hi_score);
+			write(pref_dir() ~ "/" ~ "score.dat", cast(void[])hi_score);
 		}
 		debug{
 			for(int i = 0; i < RANKING_MAX; i++){
@@ -194,7 +207,7 @@
 				hi_score[i * RANKING_RECORD + RANKING_PTIME] = time;
 				hi_score[i * RANKING_RECORD + RANKING_PHASE] = phase;
 				hi_score[i * RANKING_RECORD + RANKING_CHAIN] = max_chain;
-				write("score.dat", cast(void[])hi_score);
+				write(pref_dir() ~ "/" ~ "score.dat", cast(void[])hi_score);
 				break;
 			}
 		}
